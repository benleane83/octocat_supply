name: Build and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY_URL: "ghcr.io"
  API_IMAGE_NAME: ${{ github.repository }}-api
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build_api:
    name: Build API Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    outputs:
      api_image: ${{ steps.meta.outputs.tags }}
      api_digest: ${{ steps.build.outputs.digest }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_URL }}/${{ env.API_IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-,enable=${{ github.event_name != 'pull_request' }}
            type=sha,prefix=pr-,enable=${{ github.event_name == 'pull_request' }}

      - name: Build and push API image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./api
          file: ./api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_URL }}/${{ env.API_IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

  build_frontend:
    name: Build Frontend Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    outputs:
      frontend_image: ${{ steps.meta.outputs.tags }}
      frontend_digest: ${{ steps.build.outputs.digest }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_URL }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-,enable=${{ github.event_name != 'pull_request' }}
            type=sha,prefix=pr-,enable=${{ github.event_name == 'pull_request' }}

      - name: Build and push Frontend image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_URL }}/${{ env.FRONTEND_IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true



